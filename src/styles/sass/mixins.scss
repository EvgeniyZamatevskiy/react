@import "./templates.scss";

@mixin flex($flexDirection, $justifyContent, $alignItems, $flexWrap: null) {
  @extend %flexBox;
  flex-direction: $flexDirection;
  justify-content: $justifyContent;
  align-items: $alignItems;
  flex-wrap: $flexWrap;
}

@mixin anim($time, $delay) {
  -webkit-transition: all $time ease $delay;
  -moz-transition: all $time ease $delay;
  -ms-transform: all $time ease $delay;
  -o-transition: all $time ease $delay;
  transition: all $time ease $delay;
}

@mixin animCubic($time, $delay) {
  -webkit-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) & delay;
  -moz-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) & delay;
  -ms-transform: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) & delay;
  -o-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) & delay;
  transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) & delay;
}

@mixin rotate($deg) {
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -webkit-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin scale($num) {
  -moz-transform: scale($num);
  -ms-transform: scale($num);
  -webkit-transform: scale($num);
  -o-transform: scale($num);
  transform: scale($num);
}

@mixin skew($num) {
  -moz-transform: skewX($num);
  -ms-transform: skewX($num);
  -webkit-transform: skewX($num);
  -o-transform: skewX($num);
  transform: skewX($num);
}

@mixin cnt($height) {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  align-items: stretch;
  height: $height;
}

@mixin tr($x, $y, $z) {
  transform: translate3d($x, $y, $z);
}

@mixin flexOrder($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}
